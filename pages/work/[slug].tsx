import { Box, Container, Flex, Heading, Text, Image } from "@chakra-ui/react";
import ChakraUIRenderer from "chakra-ui-markdown-renderer";
import { NextPage } from "next";
import Head from "next/head";
import ReactMarkdown from "react-markdown";
import { Hero } from "../../components/Hero";
import { infra } from "../../infra";
import { client } from "../../infra/contentful";

interface Params {
  work: {
    fields?: any;
  };
}

const BlogPage: NextPage<Params> = (props) => {
  console.log(props);
  return (
    <Box bgColor={"quinary.500"} height={"100%"}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Box
          bgColor={"primary.500"}
          width={"100%"}
          color={"quinary.500"}
          paddingBottom={2}
        >
          <Container>
            <Flex
              alignItems={"center"}
              flexDirection={"column"}
              marginBottom={8}
            >
              <Heading as="h1" fontSize={{ base: "4xl", md: "6xl" }}>
                {props.work?.fields?.title}
              </Heading>
              <Text fontSize={"2xl"}>
                {new Date(props.work?.fields?.publishDate).toLocaleDateString()}
              </Text>
            </Flex>
          </Container>
          <Container maxW={"4xl"}>
            {props.work?.fields?.heroImage?.fields?.file?.url && (
              <Image
                src={`https:${props.work?.fields?.heroImage?.fields?.file?.url}`}
                alt={props.work?.fields?.imageAlt}
                width={"110%"}
                height={"auto"}
                paddingBottom={4}
              />
            )}
          </Container>
          <Container maxW={"2xl"}>
            <Text fontSize={"2xl"} marginBottom={6}>
              {props.work?.fields?.description}
            </Text>
          </Container>
        </Box>

        <Container maxW={"2xl"}>
          <Flex alignItems={"center"} flexDirection={"column"}>
            <Box fontSize={"xl"}>
              <ReactMarkdown components={ChakraUIRenderer()} skipHtml>
                {props.work?.fields?.body}
              </ReactMarkdown>
            </Box>
          </Flex>
        </Container>
      </main>
    </Box>
  );
};

export async function getStaticProps(context: any) {
  const item = await infra.api.works.getEntryBySlug(context.params.slug);

  return {
    props: {
      work: item,
    },
    revalidate: 10000,
  };
}

export async function getStaticPaths() {
  const paths = await infra.api.works.getWorkPaths();

  return { paths, fallback: true };
}

export default BlogPage;
